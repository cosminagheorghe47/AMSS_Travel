{"ast":null,"code":"var _jsxFileName = \"D:\\\\master\\\\AMSS\\\\AMSS\\\\amss_react\\\\src\\\\GroupList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupList = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [newGroupName, setNewGroupName] = useState('');\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const fetchGroups = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/groups');\n      setGroups(response.data);\n    } catch (error) {\n      console.error(\"Error fetching groups\", error);\n    }\n  };\n  const addGroup = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/groups', {\n        name: newGroupName\n      });\n      setGroups([...groups, response.data]);\n      setNewGroupName('');\n    } catch (error) {\n      console.error(\"Error adding group\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: group.name\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newGroupName,\n      onChange: e => setNewGroupName(e.target.value),\n      placeholder: \"New Group Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGroup,\n      children: \"Add Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupList, \"Dhfp6EprA8kAE8FI9Vfz1n6/9yQ=\");\n_c = GroupList;\nexport default GroupList;\nvar _c;\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","GroupList","_s","groups","setGroups","newGroupName","setNewGroupName","fetchGroups","response","get","data","error","console","addGroup","post","name","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","id","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/master/AMSS/AMSS/amss_react/src/GroupList.js"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GroupList = () => {\r\n  const [groups, setGroups] = useState([]);\r\n  const [newGroupName, setNewGroupName] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchGroups();\r\n  }, []);\r\n\r\n  const fetchGroups = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/api/groups');\r\n      setGroups(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching groups\", error);\r\n    }\r\n  };\r\n\r\n  const addGroup = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/groups', { name: newGroupName });\r\n      setGroups([...groups, response.data]);\r\n      setNewGroupName('');\r\n    } catch (error) {\r\n      console.error(\"Error adding group\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Group List</h1>\r\n      <ul>\r\n        {groups.map((group) => (\r\n          <li key={group.id}>{group.name}</li>\r\n        ))}\r\n      </ul>\r\n      <input\r\n        type=\"text\"\r\n        value={newGroupName}\r\n        onChange={(e) => setNewGroupName(e.target.value)}\r\n        placeholder=\"New Group Name\"\r\n      />\r\n      <button onClick={addGroup}>Add Group</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,kCAAkC,CAAC;MACpEL,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMV,KAAK,CAACgB,IAAI,CAAC,kCAAkC,EAAE;QAAEC,IAAI,EAAEV;MAAa,CAAC,CAAC;MAC7FD,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEK,QAAQ,CAACE,IAAI,CAAC,CAAC;MACrCJ,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEX,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBpB,OAAA;MAAAgB,QAAA,EACGb,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChBtB,OAAA;QAAAgB,QAAA,EAAoBM,KAAK,CAACP;MAAI,GAArBO,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLpB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,YAAa;MACpBqB,QAAQ,EAAGC,CAAC,IAAKrB,eAAe,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC;IAAgB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFpB,OAAA;MAAQ8B,OAAO,EAAEjB,QAAS;MAAAG,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5CID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}